name: Go CI & Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go 1.23.10
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.10'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./... -v

      - name: Build server binary
        run: |
          go build -v -o edulution-fileproxy ./cmd/server
          chmod +x edulution-fileproxy
          tar czf edulution-fileproxy.tar.gz edulution-fileproxy config.example.yml

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated release of webdav-server binary built on ${{ github.run_id }}.
          draft: false
          prerelease: false

      - name: Upload webdav-server asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/webdav-server
          asset_name: webdav-server
          asset_content_type: application/octet-stream
